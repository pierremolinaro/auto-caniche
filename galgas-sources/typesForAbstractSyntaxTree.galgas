

#--------------------------------------------------------------------*

list @enumTypeList {
  public var @lstring mEnumListName
  public var @lstringlist mEnumConstantList
  public var @bool mGenerateCode
}

#--------------------------------------------------------------------*

list @enumVarDeclarationList {
  public var @lstring mEnumTypeName
  public var @lstring mEnumVarName
  public var @lstring mConstantName
}

#--------------------------------------------------------------------*

list @eventDeclarationList {
  public var @lstring mEventName
  public var @eventArgumentList mEventArgumentList
  public var @instructionList mEventInstructionList
  public var @expressionList mEnsureExpressionList
  public var @location mEndOfEnsureExpressionList
}

#--------------------------------------------------------------------*

list @eventArgumentList {
  public var @lstring mArgumentTypeName
  public var @lstring mArgumentVarName
}

#--------------------------------------------------------------------*

list @machineList {
  public var @lstring mMachineName
  public var @enumVarDeclarationList mEnumVarDeclarationList
  public var @expressionList mInvariantExpressionList
  public var @eventDeclarationList mEventList
}

#--------------------------------------------------------------------*

abstract refclass @expression {}

#--------------------------------------------------------------------*

list @expressionList {
  public var @lstring mLabel
  public var @expression mExpression
}

#--------------------------------------------------------------------*

refclass @implicationExpression : @expression {
  public var @expression mLeft
  public var @expression mRight
}

#--------------------------------------------------------------------*

refclass @logicalOrExpression : @expression {
  public var @expression mLeft
  public var @expression mRight
}

#--------------------------------------------------------------------*

refclass @logicalAndExpression : @expression {
  public var @expression mLeft
  public var @expression mRight
}

#----------------------------------------------------------------*

abstract refclass @comparisonRightOperand {
}

#--------------------------------------------------------------------*

refclass @constantAsComparisonRightOperand : @comparisonRightOperand {
  public var @lstring mConstantName
}

#--------------------------------------------------------------------*

refclass @attributeAsComparisonRightOperand : @comparisonRightOperand {
  public var @lstring mAttributeName
  public var @bool mHasOldQualifier
}

#--------------------------------------------------------------------*

enum @enumComparisonOperator {
  case equal
  case notEqual
}

#--------------------------------------------------------------------*

refclass @comparisonInExpression : @expression {
  public var @lstring mAttributeName
  public var @enumComparisonOperator mOperator
  public var @comparisonRightOperand mRightOperand
}

#----------------------------------------------------------------*

abstract refclass @instruction {}

#--------------------------------------------------------------------*

list @instructionList {
  public var @instruction mInstruction
}

#----------------------------------------------------------------*

abstract refclass @assignmentSourceExpression {
}

#--------------------------------------------------------------------*

refclass @varAsAssignmentSourceExpression : @assignmentSourceExpression {
  public var @lstring mSourceVarName
}

#--------------------------------------------------------------------*

refclass @constantAsAssignmentSourceExpression : @assignmentSourceExpression {
  public var @lstring mConstantName
}

#--------------------------------------------------------------------*

refclass @functionAsAssignmentSourceExpression : @assignmentSourceExpression {
  public var @lstring mFunctionName
  public var @lstring mOperandName
}

#--------------------------------------------------------------------*

refclass @assertInstruction : @instruction {
  public var @location mAssertInstructionLocation
  public var @expression mAssertExpression
}

#--------------------------------------------------------------------*

refclass @assignmentInstruction : @instruction {
  public var @lstring mTargetVarName
  public var @assignmentSourceExpression mSourceExpression
}

#----------------------------------------------------------------*

refclass @ifInstruction : @instruction {
  public var @location mIFinstructionLocation
  public var @expression mTestExpression
  public var @location mEndOfTestExpression
  public var @instructionList mThenInstructionList
  public var @instructionList mElseInstructionList
}

#----------------------------------------------------------------*

#list @switchCaseList {
#  @lstringlist mConstantNameList
#  @location mEndOfConstantList
#  @instructionList mInstructionList
#}

#----------------------------------------------------------------*

#shared class @switchInstruction : @instruction {
#  @location mSWITCHinstructionLocation
#  @lstring mVariableName
#  @switchCaseList mSwitchCaseList
#  @location mEndOfSwitchExpression
#}

#----------------------------------------------------------------*

list @functionValueList {
  public var @lstring mOperandName
  public var @lstring mResultName
}

#----------------------------------------------------------------*

list @functionDefinitionList {
  public var @lstring mFunctionName
  public var @lstring mOperandEnumTypeName
  public var @lstring mResultEnumTypeName
  public var @functionValueList mValueList
}

#--------------------------------------------------------------------*

list @scenarioEventSequence {
  public var @lstring mEventName
  public var @lstringlist mArgumentNameList
}

#--------------------------------------------------------------------*

list @scenarioList {
  public var @lstring mMachineName
  public var @lstring mScenarioName
  public var @scenarioEventSequence mEventSequence
}

#----------------------------------------------------------------*

struct @ast {
  public var @enumTypeList mEnumTypeList
  public var @machineList mMachineList
  public var @functionDefinitionList mFunctionDefinitionList
  public var @scenarioList mScenarioList
}

#----------------------------------------------------------------*

